apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: executor
  name: executor
spec:
  replicas: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: executor
    spec:
      hostNetwork: True
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - executor
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - image: ubuntu
        name: init
        args: ["bash", "-c", "cp /tmp/config/* /tmp/zuul; echo '' >> /tmp/zuul/zuul.conf; echo hostname=`hostname -I | cut -d ' ' -f 1` >> /tmp/zuul/zuul.conf"]
        volumeMounts:
        - mountPath: /tmp/config
          name: zuul-etc
        - mountPath: /tmp/zuul
          name: tmp
      containers:
      - image: zuul/zuul-executor
        name: executor
        args: ["sh", "-c", "mkdir -p /var/ssh; cp /mnt/* /var/ssh; chmod 0600 /var/ssh/*; mkdir -p /srv/static/logs; exec zuul-executor -d"]
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/zuul
          name: tmp
#        - mountPath: /var/playbooks/
#          name: executor-claim1
        - mountPath: /mnt
          name: sshkey
        {{ if .Values.host_key.enabled }}
        - mountPath: /root/.ssh
          name: hostkey
        {{ end }}
#        - mountPath: /srv/static/logs
#          name: logs
      restartPolicy: Always
      volumes:
      volumes:
      - name: tmp
        emptyDir: {}
      - name: zuul-etc
        configMap:
          name: zuul-config
#      - name: executor-claim1
#        persistentVolumeClaim:
#          claimName: executor-claim1
      - name: sshkey
        secret:
          secretName: ssh-key
      {{ if .Values.host_key.enabled }}
      - name: hostkey
        secret:
          secretName: host-key
      {{ end }}
#      - name: logs
#        persistentVolumeClaim:
#          claimName: logs
