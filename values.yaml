mariadb:
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry and imagePullSecrets
  ##
  # global:
  #   imageRegistry: myRegistryName
  #   imagePullSecrets:
  #     - myRegistryKeySecretName
  
  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:
  fullnameOverride: mariadb
  ## Bitnami MariaDB image
  ## ref: https://hub.docker.com/r/bitnami/mariadb/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.3.15-debian-9-r31
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
  
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and NAMI debugging in minideb
    ## ref:  https://github.com/bitnami/minideb-extras/#turn-on-bash-debugging
    debug: false
  
  service:
    ## Kubernetes service type, ClusterIP and NodePort are supported at present
    type: ClusterIP
    # clusterIp: None
    port: 3306
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    #   master: 30001
    #   slave: 30002
  
  ## Pods Service Account
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: false
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the mariadb.fullname template
    # name:
  
  ## Role Based Access
  ## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
  ##
  
  rbac:
    create: false
  
  ## Pod Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  
  # # Use existing secret (ignores root, db and replication passwords)
  # existingSecret:
  
  rootUser:
    ## MariaDB admin password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-the-root-password-on-first-run
    ##
    password: rootpassword
    ##
    ## Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
    ## If it is not force, a random password will be generated.
    forcePassword: true
  
  db:
    ## MariaDB username and password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#creating-a-database-user-on-first-run
    ##
    user: zuul
    password: secret
    ## Password is ignored if existingSecret is specified.
    ## Database to create
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#creating-a-database-on-first-run
    ##
    name: zuul
    ## Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
    ## If it is not force, a random password will be generated.
    forcePassword: true
  
  replication:
    ## Enable replication. This enables the creation of replicas of MariaDB. If false, only a
    ## master deployment would be created
    enabled: true
    ##
    ## MariaDB replication user
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-up-a-replication-cluster
    ##
    user: replicator
    ## MariaDB replication user password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-up-a-replication-cluster
    ##
    password:
    ## Password is ignored if existingSecret is specified.
    ##
    ## Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
    ## If it is not force, a random password will be generated.
    forcePassword: false
  
  ## initdb scripts
  ## Specify dictionary of scripts to be run at first boot
  ## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
  ##
  # initdbScripts:
  #   my_init_script.sh: |
  #      #!/bin/sh
  #      echo "Do something."
  #
  ## ConfigMap with scripts to be run at first boot
  ## Note: This will override initdbScripts
  # initdbScriptsConfigMap:
  
  master:
    ## Mariadb Master additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    # annotations:
    #   - key: key1
    #     value: value1
  
    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}
  
    ## Kept for backwards compatibility. You can now disable it by removing it.
    ## if you wish to set it through master.affinity.podAntiAffinity instead.
    ##
    antiAffinity: soft
  
    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
  
    ## Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
  
    ## updateStrategy for MariaDB Master StatefulSet
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    updateStrategy:
      type: RollingUpdate
  
    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## If true, use a Persistent Volume Claim, If false, use emptyDir
      ##
      enabled: true
      # Enable persistence using an existing PVC
      # existingClaim:
      # Subdirectory of the volume to mount
      # subPath:
      mountPath: /bitnami/mariadb
      ## Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ## Persistent Volume Claim annotations
      ##
      annotations: {}
      ## Persistent Volume Access Mode
      ##
      accessModes:
      - ReadWriteOnce
      ## Persistent Volume size
      ##
      size: 8Gi
      ##
    extraInitContainers: |
    # - name: do-something
    #   image: busybox
    #   command: ['do', 'something']
  
    ## Configure MySQL with a custom my.cnf file
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
  
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
  
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
  
    ## Configure master resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    livenessProbe:
      enabled: true
      ##
      ## Initializing the database could take some time
      initialDelaySeconds: 120
      ##
      ## Default Kubernetes values
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      ##
      ## Default Kubernetes values
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
  
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
      # maxUnavailable: 1
  
  slave:
    replicas: 2
  
    ## Mariadb Slave additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    # annotations:
    #   - key: key1
    #     value: value1
  
    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}
  
    ## Kept for backwards compatibility. You can now disable it by removing it.
    ## if you wish to set it through slave.affinity.podAntiAffinity instead.
    ##
    antiAffinity: soft
  
    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
  
    ## Tolerations for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
  
    ## updateStrategy for MariaDB Slave StatefulSet
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    updateStrategy:
      type: RollingUpdate
  
    persistence:
      ## If true, use a Persistent Volume Claim, If false, use emptyDir
      ##
      enabled: true
      # storageClass: "-"
      annotations:
      accessModes:
      - ReadWriteOnce
      ## Persistent Volume size
      ##
      size: 8Gi
      ##
    extraInitContainers: |
    # - name: do-something
    #   image: busybox
    #   command: ['do', 'something']
  
    ## Configure MySQL slave with a custom my.cnf file
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    config: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
  
      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
  
      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
  
    ##
    ## Configure slave resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    livenessProbe:
      enabled: true
      ##
      ## Initializing the database could take some time
      initialDelaySeconds: 120
      ##
      ## Default Kubernetes values
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      enabled: true
      initialDelaySeconds: 45
      ##
      ## Default Kubernetes values
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
  
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
      # maxUnavailable: 1
  
  metrics:
    enabled: false
    image:
      registry: docker.io
      repository: prom/mysqld-exporter
      tag: v0.10.0
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistryKeySecretName
    resources: {}
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"
  
    # Enable this if you're using https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
      ## Specify a namespace if needed
      # namespace: monitoring
      # fallback to the prometheus default unless specified
      # interval: 10s
      # scrapeTimeout: 10s
      ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
      ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)
      ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)
      selector:
        prometheus: kube-prometheus
zookeeper:
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry and imagePullSecrets
  ##
  # global:
  #   imageRegistry: myRegistryName
  #   imagePullSecrets:
  #     - myRegistryKeySecretName
  fullnameOverride: zookeeper
  ## Bitnami Zookeeper image version
  ## ref: https://hub.docker.com/r/bitnami/zookeeper/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/zookeeper
    tag: 3.5.5-debian-9-r9
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and NAMI debugging in minideb
    ## ref:  https://github.com/bitnami/minideb-extras/#turn-on-bash-debugging
    ##
    debug: false
  
  ## String to partially override zookeeper.fullname template (will maintain the release name)
  # nameOverride:
  
  ## String to fully override zookeeper.fullname template
  # fullnameOverride:
  
  ## StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy: RollingUpdate
  
  ## Limits the number of pods of the replicated application that are down simultaneously from voluntary disruptions
  ## The PDB will only be created if replicaCount is greater than 1
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions
  ##
  podDisruptionBudget:
    maxUnavailable: 1
  
  ## Partition update strategy
  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
  ##
  # rollingUpdatePartition:
  
  ## StatefulSet controller supports relax its ordering guarantees while preserving its uniqueness and identity guarantees. There are two valid pod management policies: OrderedReady and Parallel
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ##
  podManagementPolicy: Parallel
  
  ## Number of ZooKeeper nodes
  ##
  replicaCount: 3
  
  ## Basic time unit in milliseconds used by ZooKeeper for heartbeats
  ##
  tickTime: 2000
  
  ## ZooKeeper uses to limit the length of time the ZooKeeper servers in quorum have to connect to a leader
  ##
  initLimit: 10
  
  ## How far out of date a server can be from a leader
  ##
  syncLimit: 5
  
  ## Limits the number of concurrent connections that a single client may make to a single member of the ZooKeeper ensemble
  ##
  maxClientCnxns: 60
  
  ## Allow to accept connections from unauthenticated users
  ##
  allowAnonymousLogin: true
  
  auth:
    ## Use existing secret (ignores previous password)
    ##
    # existingSecret:
    ## Enable Zookeeper auth. It uses SASL/Digest-MD5
    ##
    enabled: false
    ## User that will use Zookeeper clients to auth
    ##
    # clientUser:
    ## Password that will use Zookeeper clients to auth
    ##
    # clientPassword:
    ## Comma, semicolon or whitespace separated list of user to be created. Specify them as a string, for example: "user1,user2,admin"
    ##
    # serverUsers: ""
    ## Comma, semicolon or whitespace separated list of passwords to assign to users when created. Specify them as a string, for example: "pass4user1, pass4user2, pass4admin"
    ##
    # serverPasswords: ""
  
  ## Size in MB for the Java Heap options (Xmx and XMs). This env var is ignored if Xmx an Xms are configured via JVMFLAGS
  ##
  heapSize: 1024
  
  ## Log level for the Zookeeper server. ERROR by default. Have in mind if you set it to INFO or WARN the ReadinessProve will produce a lot of logs.
  ##
  logLevel: ERROR
  
  ## Default JVMFLAGS for the ZooKeeper process
  ##
  # jvmFlags:
  
  ## Configure ZooKeeper with a custom zoo.cfg file
  ##
  # config:
  
  ## Kubernetes configuration
  ## For minikube, set this to NodePort, elsewhere use LoadBalancer
  ##
  service:
    type: ClusterIP
    port: 2181
    followerPort: 2888
    electionPort: 3888
    publishNotReadyAddresses: true
  
  ## Zookeeper Pod Security Context
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  
  ## Zookeeper data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  persistence:
    enabled: true
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}
  
  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  
  ## Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  
  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  
  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
  
  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  
  ## Prometheus Exporter / Metrics
  ##
  metrics:
    enabled: false
  
    image:
      registry: docker.io
      repository: dabealu/zookeeper-exporter
      tag: v0.1.0
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistryKeySecretName
  
    ## Metrics exporter pod Annotation and Labels
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9141"
    podLabels: {}
  
    timeoutSeconds: 3
  
    ## Metrics exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
  
    ## Metrics exporter labels and tolerations for pod assignment
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []
config:
  zuul: |-
  main: |-
  ssh:
    zuul:
    zuulPub:
    admin:
    adminPub:
  gerritHost: gerrit

ingress:
  enabled: false

host_key:
  enabled: false
